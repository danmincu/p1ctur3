using System;
using System.ComponentModel;

namespace ShutterTale.Entities
{
	/// <summary>
	///		The data structure representation of the 'Media_Image' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IMediaImage 
	{
		/// <summary>			
		/// Id : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "Media_Image"</remarks>
		System.Guid Id { get; set; }
				
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		System.Guid OriginalId { get; set; }
			
		
		
		/// <summary>
		/// Orientation : 
		/// </summary>
		System.Byte?  Orientation  { get; set; }
		
		/// <summary>
		/// YCbCrPositioning : 
		/// </summary>
		System.Byte?  YcbCrPositioning  { get; set; }
		
		/// <summary>
		/// ExposureTime : 
		/// </summary>
		System.Double?  ExposureTime  { get; set; }
		
		/// <summary>
		/// FNumber : 
		/// </summary>
		System.Double?  Fnumber  { get; set; }
		
		/// <summary>
		/// ExposureProgram : 
		/// </summary>
		System.Byte?  ExposureProgram  { get; set; }
		
		/// <summary>
		/// ISOSpeedRatings : 
		/// </summary>
		System.Int16?  IsoSpeedRatings  { get; set; }
		
		/// <summary>
		/// ShutterSpeedValue : 
		/// </summary>
		System.Double?  ShutterSpeedValue  { get; set; }
		
		/// <summary>
		/// ApertureValue : 
		/// </summary>
		System.Double?  ApertureValue  { get; set; }
		
		/// <summary>
		/// MeteringMode : 
		/// </summary>
		System.Byte?  MeteringMode  { get; set; }
		
		/// <summary>
		/// Flash : 
		/// </summary>
		System.Byte?  Flash  { get; set; }
		
		/// <summary>
		/// FocalLength : 
		/// </summary>
		System.Double?  FocalLength  { get; set; }
		
		/// <summary>
		/// FlashpixVersion : 
		/// </summary>
		System.String  FlashpixVersion  { get; set; }
		
		/// <summary>
		/// ColorSpace : 
		/// </summary>
		System.Byte?  ColorSpace  { get; set; }
		
		/// <summary>
		/// SensingMethod : 
		/// </summary>
		System.Byte?  SensingMethod  { get; set; }
		
		/// <summary>
		/// ExposureMode : 
		/// </summary>
		System.Byte?  ExposureMode  { get; set; }
		
		/// <summary>
		/// WhiteBalance : 
		/// </summary>
		System.Byte?  WhiteBalance  { get; set; }
		
		/// <summary>
		/// SceneCaptureType : 
		/// </summary>
		System.Byte?  SceneCaptureType  { get; set; }
		
		/// <summary>
		/// Sharpness : 
		/// </summary>
		System.Byte?  Sharpness  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties

		#endregion Data Properties

	}
}


